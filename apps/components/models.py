# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models

from .constants import (
    TYPE_OTHER, COMPONENT_TYPE_CHOICES
)

from apps.devices.models import Device
from django_module_attr.models import GenericData, Tag


#
# https://developers.google.com/assistant/smarthome/concepts/homegraph
# https://developers.google.com/assistant/smarthome/traits
#


class Component(models.Model):
    external_id = models.CharField(max_length=100)
    name = models.CharField(max_length=100)
    type = models.CharField(max_length=10,
                            default=TYPE_OTHER,
                            choices=COMPONENT_TYPE_CHOICES)
    enabled = models.BooleanField(default=True)

    # Generated by the system
    # Store specific data and state
    # Every component store yout own metadata
    # Puede no ser necesario, ya que el device tendria todo actualizado
    metadata = models.ForeignKey(GenericData,
                                 null=True,
                                 related_name="+",
                                 on_delete=models.CASCADE)
    tags = models.ManyToManyField(Tag, related_name="+")

    device = models.ForeignKey(Device,
                               related_name="components",
                               on_delete=models.PROTECT)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name

    class Meta:
        ordering = ('name',)

    @classmethod
    def create(cls, external_id, name, device, type=TYPE_OTHER, tags=[]):
        component = Component.objects.create(
            external_id=external_id,
            name=name,
            type=type,
            device=device,
        )
        component.tags.set(tags)

        return component
